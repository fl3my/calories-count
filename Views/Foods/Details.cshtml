@model CaloriesCount.Models.Food

@{
    ViewBag.Title = "Details";
}

<h2>@Html.DisplayFor(model => model.Name)</h2>
<h4>@Html.DisplayFor(model => model.Category.Name)</h4>

<div>
    @if (Request.IsAuthenticated && User.IsInRole("Admin"))
    {
        <h4>Admin Tools: @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) | @Html.ActionLink("Delete", "Delete", new { id = Model.Id })</h4>
    }
    <hr />
    <div style="margin-bottom:20px">
        <a href="@Url.Action("Index", "Foods")" class="btn btn-default"><span class="glyphicon glyphicon-chevron-left"></span>  Go back</a>
        <a href="@Url.Action("Create", "DiaryEntries",new { foodId = Model.Id })" class="btn btn-success">Add to todays diary</a> 
    </div>
    <div class="row">

        <div class="col-xs-12 col-sm-6">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h3 class="panel-title">Food Image</h3>
                </div>
                <div class="panel-body">
                    <img src="@(Url.Content(Constants.FoodImagePath) + Model.ImageFileName)" class="img-responsive img-rounded" />
                </div>
            </div>
        </div>

        <div class="col-xs-12 col-sm-6">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h3 class="panel-title">Nutritional Values per 100g</h3>
                </div>
                <div class="panel-body">
                    <table class="table table-striped" style="margin-bottom:0px">
                        <tr>
                            <th> Calories</th>
                            <td>@Html.DisplayFor(model => model.Calories)<span> kCal</span></td>
                        </tr>
                        <tr>
                            <th>Fat</th>
                            <td>@Html.DisplayFor(model => model.Fat)<span> g</span></td>
                        </tr>
                        <tr>
                            <th>Protein</th>
                            <td>@Html.DisplayFor(model => model.Protein)<span> g</span></td>
                        </tr>
                        <tr>
                            <th>Carbohydrates</th>
                            <td>@Html.DisplayFor(model => model.Carbohydrates)<span> g</span></td>
                        </tr>
                        <tr>
                            <th>Fibre</th>
                            <td>@Html.DisplayFor(model => model.Fibre)<span> g</span></td>
                        </tr>
                    </table>
                </div>
            </div>
        </div>

        <!-- Add the extra clearfix for only the required viewport -->
        <div class="clearfix visible-md-block visible-lg-block"></div>

        <div class="col-xs-12 col-sm-6">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h3 class="panel-title">Preview Calories</h3>
                </div>
                <div class="slidecontainer text-center">
                    <label style="margin:10px;" for="0" class="pull-left">1 gram</label>
                    <label style="margin:10px;" for="" class="pull-right">500 gram</label>
                    <input type="range" min="1" max="500" value="1" step="10" class="slider" id="myRange">
                    <h3 id="slider_value">Scroll slider to preview</h3>
                </div>
            </div>
        </div>

        <div class="col-xs-12 col-sm-6">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h3 class="panel-title">Macronutrient content per 100g</h3>
                </div>
                <div class="panel-body">
                    <canvas id="MacroChart"></canvas>
                </div>
            </div>
        </div>


    </div>
</div>

@section Scripts
{
    <!-- Add ChartJS by CDN -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.7.1/chart.min.js" integrity="sha512-QSkVNOCYLtj73J4hbmVoOV6KVZuMluZlioC+trLpewV8qMjsWqlIQvkn1KGX2StWvPMdWGBqim1xlC8krl1EKQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

    <!-- Generate the macronutrient doughnut chart-->
    <script type="text/javascript">

        // Get chart canvas
        const ctx = document.getElementById("MacroChart");

        // Set the data
        const data = {
            labels: [
                'Protein',
                'Carbohydrates',
                'Fats'
            ],
            datasets: [{
                label: 'Macronutrient dataset',
                data: [@Model.Protein, @Model.Carbohydrates, @Model.Fat],
                backgroundColor: [
                    'rgb(255, 99, 132)',
                    'rgb(54, 162, 235)',
                    'rgb(255, 205, 86)'
                ],
                hoverOffset: 4
            }]
        };

        // Add gram unit to item value on hover
        const options = {
            plugins: {
                tooltip: {
                    callbacks: {
                        label: (ttItem) => (`${ttItem.label}: ${ttItem.parsed} g`)
                    }
                }
            }
        }

        const config = {
            type: 'doughnut',
            data: data,
            options: options
        };

        var macroChart = new Chart(ctx, config );

        // Preview Calories
        $(document).on('input', '#myRange', function () {

            var calories = @Model.Calories;
            calories = calories / 100;

            var sliderVal = $(this).val();
            var totalCalories = calories * sliderVal;

            totalCalories = Math.round(totalCalories);

            var outString = `${sliderVal} g is ${totalCalories} kCals`
            $('#slider_value').html(outString);
        })


    </script>
}