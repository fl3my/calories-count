@model CaloriesCount.ViewModels.FoodIndexViewModel
@using PagedList.Mvc

@{
    ViewBag.Title = "Index";
}
<h3>
    @(String.IsNullOrWhiteSpace(Model.Search) ? "Showing all" : "You search for " + Model.Search + " found") @Model.Foods.TotalItemCount foods
</h3>
<p>
    @if (Request.IsAuthenticated && User.IsInRole("Admin"))
    {
        @Html.ActionLink("Create New", "Create")
    }

    @using (Html.BeginRouteForm("FoodsIndex", "FormMethod.Get"))
    {
        <label>Filter by category:</label>
        @Html.DropDownListFor(vm => vm.Category, Model.CategoryFilterItems, "All", new { @class = "form-control" });
        <label>Sort By:</label>
        @Html.DropDownListFor(vm => vm.SortBy, new SelectList(Model.Sorts, "Value", "Key"), "Default", new { @class = "form-control" });
        <input type="submit" value="Filter" class="btn btn-primary"/>
        <input type="hidden" name="Search" id="Search" value="@Model.Search"/>
    }
</p>
<div class="row">
    @foreach (var item in Model.Foods)
    {
        <div class="col-xs-6 col-sm-4 col-md-3">

            <div class="panel panel-default text-center">

                <div class="panel-heading">
                    <h3 class="panel-title">@Html.DisplayFor(modelItem => item.Name)</h3>
                    <h6>@Html.DisplayFor(modelItem => item.Category.Name)</h6>
                </div>

                <div class="panel-body">
                    <img src="@(Url.Content(Constants.FoodImagePath) + item.ImageFileName)" class="img-fluid img-responsive img-rounded" />
                </div>

                <div class="panel-footer">
                    <h3>@Html.DisplayFor(modelItem => item.Calories) <i class="fa-solid fa-fire"></i></h3>
                    <h6>@Html.DisplayNameFor(modelItem => item.Calories)</h6>
                    @Html.ActionLink("Add", "Create", "DiaryEntries", new { foodId = item.Id }, null) |
                    @Html.ActionLink("Details", "Details", new { id = item.Id })
                </div>
            </div>
        </div>
    }

    <div class="col-xs-12 text-center">
        Page @(Model.Foods.PageCount < Model.Foods.PageNumber ? 0 : Model.Foods.PageNumber) of @Model.Foods.PageCount
        @Html.PagedListPager(Model.Foods, page => Url.Action("Index", new { category = Model.Category, Search = Model.Search, sortBy = Model.SortBy, page }))
    </div>
</div>
